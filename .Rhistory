stigma_2023[["Trouble.falling.or.staying.asleep..or.sleeping.too.much"]],
stigma_2023[["Feeling.tired.or.having.little.energy"]],
stigma_2023[["Poor.appetite.or.overeating"]] ,
stigma_2023[["Feeling.bad.about.yourself...or.that.you.are.a.failure.or.have.let.yourself.or.your.family.down"]] ,
stigma_2023[["Trouble.concentrating.on.things..such.as.reading.the.newspaper.or.watching.television."]] ,
stigma_2023[["Moving.or.speaking.so.slowly.that.other.people.could.have.noticed..Or..the.opposite...being.so.fidgety.or.restless.that.you.have.been.moving..around.a.lot.more.than.usual"]],
stigma_2023[["Feeling.nervous..anxious.or.on.edge"]] ,
stigma_2023[["Not.being.able.to.stop.or.control.worrying"]] ,
stigma_2023[["Worrying.too.much.about.different.things"]] ,
stigma_2023[["Trouble.relaxing"]] ,
stigma_2023[["Being.so.restless.that.it.is.hard.to.sit.still"]] ,
stigma_2023[["Becoming.easily.annoyed.or.irritable"]] ,
stigma_2023[["Feeling.afraid.as.if.something.awful.might.happen" ]],
), ncol = 15)
matrix(data = c(
stigma_2023[["Little.interest.or.pleasure.in.doing.things"]] ,
stigma_2023[["Feeling.down..depressed..or.hopeless"]] ,
stigma_2023[["Trouble.falling.or.staying.asleep..or.sleeping.too.much"]],
stigma_2023[["Feeling.tired.or.having.little.energy"]],
stigma_2023[["Poor.appetite.or.overeating"]] ,
stigma_2023[["Feeling.bad.about.yourself...or.that.you.are.a.failure.or.have.let.yourself.or.your.family.down"]] ,
stigma_2023[["Trouble.concentrating.on.things..such.as.reading.the.newspaper.or.watching.television."]] ,
stigma_2023[["Moving.or.speaking.so.slowly.that.other.people.could.have.noticed..Or..the.opposite...being.so.fidgety.or.restless.that.you.have.been.moving..around.a.lot.more.than.usual"]],
stigma_2023[["Feeling.nervous..anxious.or.on.edge"]] ,
stigma_2023[["Not.being.able.to.stop.or.control.worrying"]] ,
stigma_2023[["Worrying.too.much.about.different.things"]] ,
stigma_2023[["Trouble.relaxing"]] ,
stigma_2023[["Being.so.restless.that.it.is.hard.to.sit.still"]] ,
stigma_2023[["Becoming.easily.annoyed.or.irritable"]] ,
stigma_2023[["Feeling.afraid.as.if.something.awful.might.happen" ]]
), ncol = 15)
cor(matrix(data = c(
stigma_2023[["Little.interest.or.pleasure.in.doing.things"]] ,
stigma_2023[["Feeling.down..depressed..or.hopeless"]] ,
stigma_2023[["Trouble.falling.or.staying.asleep..or.sleeping.too.much"]],
stigma_2023[["Feeling.tired.or.having.little.energy"]],
stigma_2023[["Poor.appetite.or.overeating"]] ,
stigma_2023[["Feeling.bad.about.yourself...or.that.you.are.a.failure.or.have.let.yourself.or.your.family.down"]] ,
stigma_2023[["Trouble.concentrating.on.things..such.as.reading.the.newspaper.or.watching.television."]] ,
stigma_2023[["Moving.or.speaking.so.slowly.that.other.people.could.have.noticed..Or..the.opposite...being.so.fidgety.or.restless.that.you.have.been.moving..around.a.lot.more.than.usual"]],
stigma_2023[["Feeling.nervous..anxious.or.on.edge"]] ,
stigma_2023[["Not.being.able.to.stop.or.control.worrying"]] ,
stigma_2023[["Worrying.too.much.about.different.things"]] ,
stigma_2023[["Trouble.relaxing"]] ,
stigma_2023[["Being.so.restless.that.it.is.hard.to.sit.still"]] ,
stigma_2023[["Becoming.easily.annoyed.or.irritable"]] ,
stigma_2023[["Feeling.afraid.as.if.something.awful.might.happen" ]]
), ncol = 15))
plot(phq, gad)
mean(phq)
mean(gad)
sd(gad)
sd(phq)
sd(gad)
sd(phq)
sd(gad)
hist(phq)
hist(gad)
plot(phq, gad)
hist(phq)
hist(gad)
plot(phq, gad)
boxplot(gad)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
stigma_2023 <- read.csv("stigma_2023.csv")
rmarkdown::paged_table(stigma_2023)
stigma_2023$time_mins <- (stigma_2023$Completion.time - stigma_2023$Start.time) * 24 * 60
cati_qs <- data.frame(
reverse = c(
rep("no",7),
"yes",
rep("no", 6),
"yes",
rep("no",3),
"yes",
rep("no",3),
"yes",
rep("no",4),
"yes",
rep("no",14)
),
questions = c(
"I often find myself fiddling or playing repetitively with objects (e.g.  clicking pens)",
"I like to stick to certain routines for every-day tasks",
"I expend a lot of mental energy trying to fit in with others",
"I am oversensitive to bright lighting",
"There are certain activities that I always choose to do the same  way, every time",
"Sometimes I watch people interacting and try to copy them when I  need to socialise",
"I often rock while sitting in a chair",
"I generally enjoy social events",
"I look for strategies and ways to appear more sociable",
"In social situations, I try to avoid interactions with other people",
"There are times when I feel that my senses are overloaded",
"There are certain objects that I fiddle or play with that can help me  calm down or collect my thoughts",
"Reading non-verbal cues (e.g. facial expressions, body language) is  difficult for me",
"I like my belongings to be sorted in certain ways and will spend  time making sure they are that way",
"Social interaction is easy for me",
"When interacting with other people, I spend a lot of effort  monitoring how I am coming across",
"I find social interactions stressful",
"I am over-sensitive to touch",
"I can tell how people feel from their facial expressions",
"I have a tendency to pace or move around in a repetitive path",
"I feel discomfort when prevented from completing a particular  routine",
"I rely on a set of scripts when I talk with people",
"I find it easy to sense what someone else is feeling",
"I am over-sensitive to particular tastes (e.g. salty, sour, spicy, or  sweet)",
"I engage in certain repetitive actions when I feel stressed",
"I rarely use non-verbal cues in my interactions with others",
"I often insist on doing things in a certain way, or re-doing things  until they are just right",
"I feel confident or capable when meeting new people",
"Before engaging in a social situation, I will create a script to follow  where possible",
"Social occasions are often challenging for me",
"Sometimes the presence of a smell makes it hard for me to focus  on anything else",
"There are certain repetitive actions that others consider to be  'characteristic' of me (e.g. stroking my hair)",
"Metaphors or figures of speech often confuse me",
"It annoys me when plans I have made are changed",
"I find it difficult to make new friends",
"I react poorly to unexpected loud noises",
"I have difficulty understanding someone elses point-of-view",
"I like to arrange items in rows or patterns",
"I try to follow certain 'rules' in order to get by in social situations",
"I am sensitive to flickering lights",
"I have certain habits that I find difficult to stop (e.g. biting/tearing  nails, pulling strands of hair)",
"I have difficulty understanding the 'unspoken rules' of social  situations"
),
belittled_key = c(
"Belittled",
"Belittled2",
"Belittled3",
"Belittled4",
"Belittled5",
"Belittled6",
"Belittled7",
"Belittled8",
"Belittled9",
"Belittled10",
"Belittled11",
"Belittled12",
"Belittled13",
"Belittled14",
"Belittled15",
"Belittled16",
"Belittled17",
"Belittled18",
"Belittled19",
"Belittled20",
"Belittled21",
"Belittled22",
"Belittled23",
"Belittled24",
"Belittled25",
"Belittled26",
"Belittled27",
"Belittled28",
"Belittled29",
"Belittled30",
"Belittled31",
"Belittled32",
"Belittled33",
"Belittled34",
"Belittled35",
"Belittled36",
"Belittled37",
"Belittled38",
"Belittled39",
"Belittled40",
"Belittled41",
"Belittled42"
),
excluded_key = c(
"Excluded",
"Excluded2",
"Excluded3",
"Excluded4",
"Excluded5",
"Excluded6",
"Excluded7",
"Excluded8",
"Excluded9",
"Excluded10",
"Excluded11",
"Excluded12",
"Excluded13",
"Excluded14",
"Excluded15",
"Excluded16",
"Excluded17",
"Excluded18",
"Excluded19",
"Excluded20",
"Excluded21",
"Excluded22",
"Excluded23",
"Excluded24",
"Excluded25",
"Excluded26",
"Excluded27",
"Excluded28",
"Excluded29",
"Excluded30",
"Excluded31",
"Excluded32",
"Excluded33",
"Excluded34",
"Excluded35",
"Excluded36",
"Excluded37",
"Excluded38",
"Excluded39",
"Excluded40",
"Excluded41",
"Excluded42"
)
)
stigma_2023$cati_total      <- 0
stigma_2023$belittled_total <- 0
stigma_2023$excluded_total  <- 0
stigma_2023$belittled_agree <- 0
stigma_2023$excluded_agree  <- 0
stigma_2023$agrees          <- 0
for(i in 1:42){
matched_column = str_replace_all(cati_qs$questions[i]," ",".")
matched_column = str_replace_all(matched_column,"\\(",".")
matched_column = str_replace_all(matched_column,"\\)",".")
matched_column = str_replace_all(matched_column,"\\-",".")
matched_column = str_replace_all(matched_column,"\\,",".")
matched_column = str_replace_all(matched_column,"\\'",".")
matched_column = str_replace_all(matched_column,"\\/",".")
if(cati_qs$reverse[i] == "no"){
stigma_2023$cati_total = stigma_2023$cati_total + stigma_2023[[matched_column]]
stigma_2023$excluded_total = stigma_2023$excluded_total + stigma_2023[[cati_qs$excluded_key[i]]]
stigma_2023$belittled_total = stigma_2023$belittled_total + stigma_2023[[cati_qs$belittled_key[i]]]
# only adding scores if the participant agrees
agree_vect <- stigma_2023[[matched_column]] > 3
stigma_2023$agrees <- stigma_2023$agrees + agree_vect
stigma_2023$belittled_agree[agree_vect] <- stigma_2023$belittled_agree[agree_vect] +
stigma_2023[[cati_qs$belittled_key[i]]][agree_vect]
stigma_2023$excluded_agree[agree_vect] <- stigma_2023$excluded_agree[agree_vect] +
stigma_2023[[cati_qs$excluded_key[i]]][agree_vect]
} else {
stigma_2023$cati_total = stigma_2023$cati_total + 6 - stigma_2023[[matched_column]]
# don't include exclude and belittled
}
}
# PHQ8 scoring
stigma_2023$phq =
stigma_2023[["Little.interest.or.pleasure.in.doing.things"]] +
stigma_2023[["Feeling.down..depressed..or.hopeless"]] +
stigma_2023[["Trouble.falling.or.staying.asleep..or.sleeping.too.much"]] +
stigma_2023[["Feeling.tired.or.having.little.energy"]] +
stigma_2023[["Poor.appetite.or.overeating"]] +
stigma_2023[["Feeling.bad.about.yourself...or.that.you.are.a.failure.or.have.let.yourself.or.your.family.down"]] +
stigma_2023[["Trouble.concentrating.on.things..such.as.reading.the.newspaper.or.watching.television."]] +
stigma_2023[["Moving.or.speaking.so.slowly.that.other.people.could.have.noticed..Or..the.opposite...being.so.fidgety.or.restless.that.you.have.been.moving..around.a.lot.more.than.usual"]]
stigma_2023$gad =
stigma_2023[["Feeling.nervous..anxious.or.on.edge"]] +
stigma_2023[["Not.being.able.to.stop.or.control.worrying"]] +
stigma_2023[["Worrying.too.much.about.different.things"]] +
stigma_2023[["Trouble.relaxing"]] +
stigma_2023[["Being.so.restless.that.it.is.hard.to.sit.still"]] +
stigma_2023[["Becoming.easily.annoyed.or.irritable"]] +
stigma_2023[["Feeling.afraid.as.if.something.awful.might.happen" ]]
stigma_2023$excluded_agree_mean <- stigma_2023$excluded_agree/stigma_2023$agrees
stigma_2023$belittled_agree_mean <- stigma_2023$belittled_agree/stigma_2023$agrees
stigma_2023$excluded_agree_mean[is.na(stigma_2023$excluded_agree_mean)] = 0
stigma_2023$belittled_agree_mean[is.na(stigma_2023$belittled_agree_mean)] = 0
jasp_data <- stigma_2023[, c(
"cati_total",
"belittled_total",
"excluded_total",
"belittled_agree",
"excluded_agree",
"excluded_agree_mean",
"belittled_agree_mean",
"phq",
"gad"
)]
write.csv(jasp_data, "stigma_processed.csv")
stigma_summaries <- stigma_2023[, c(
"cati_total",
"excluded_agree_mean",
"belittled_agree_mean",
"phq",
"gad"
)]
colnames(stigma_summaries) <- c(
"cati_total",
"excluded",
"belittled",
"phq",
"gad"
)
library(corrplot)
library(Hmisc)
stigma_cor <- rcorr(as.matrix(stigma_summaries[,]))
stigma_cor$P
corrplot(
corr = stigma_cor$r,
type="upper",
order="hclust",
p.mat = stigma_cor$P,
sig.level = 0.001,
insig = "label_sig"
)
boxplot(stigma_2023$cati_total)
boxplot(phq)
boxplot(gad)
hist(groupdif, breaks = seq(-3, 3, length = 30))
hist(groupdif, breaks = seq(-3, 3, length = 30))
abline(v = observeddif, col = "red", lwd = 2)
hist(groupdif, breaks = seq(-3, 3, length = 30))
observeddif <- mean(df1[df1$group == "exp", "dif"]) - mean(df1[df1$group == "con", "dif"])
observeddif
abline(v = observeddif, col = "red", lwd = 2)
df3
df3$dep1
knitr::opts_chunk$set(echo = TRUE)
df1 <- read.csv(file = "Week5_data1.csv", header = TRUE)
df1$dif <- df1$post - df1$pre
# change group to a factor in case R treats it as a character vector
df1$group <- factor(df1$group)
library(psych)
pilotd <- cohen.d(df1$dif, df1$group)
pilotd
cohen.d(df1$post, df1$group)
attributes(pilotd)
pilotd$cohen.d[1,2]
library(pwr)
pwr.output <- pwr.t.test(
d = pilotd$cohen.d[2],
sig.level = 0.05,
power = 0.80,
type = "two.sample"
)
pwr.output
plot(pwr.output)
pwr.t.test(
d = pilotd$cohen.d[2],
sig.level = 0.05,
power = 0.95,
type = "two.sample"
)
pwr.t.test(
#d = pilotd$cohen.d[2],
sig.level = 0.05,
power = 0.8,
n = 30,
type = "two.sample"
)
pwr.t.test(
d = .5,
sig.level = 0.05,
power = 0.8,
#n = 30,
type = "two.sample"
)
pwr.t.test(
d = .3,
sig.level = 0.05,
power = 0.8,
#n = 30,
type = "two.sample"
)
pwr.r.test(
r = .3,
power = .8,
sig.level = .05
)
output.lm <- lm(post~pre, data = df1)
output.lm$residuals
ancovad <- cohen.d(output.lm$residuals, df1$group)
ancovad
pwr.t.test(
d = ancovad$cohen.d[2],
sig.level = 0.05,
power = 0.80,
type = "two.sample"
)
ps <- numeric(1000)
nsub <- 30  # number of participants for each group
for (i in 1:1000){
A <- rnorm(nsub, mean = 0, sd = 1)  # sample participants from G1
B <- rnorm(nsub, mean = 0.6, sd = 2) # sample participants from G2
fit_t <- t.test(A, B, paired = FALSE, var.equal = TRUE)
ps[i] <- fit_t$p.value   # save p values to the object ps
}
mean(ps < .05)
nsub <- 112  # number of participants for each group
for (i in 1:10000){
A <- rnorm(nsub, mean = 0, sd = 1)  # sample participants from G1
B <- rnorm(nsub, mean = 0.6, sd = 2) # sample participants from G2
fit_t <- t.test(A, B, paired = FALSE, var.equal = TRUE)
ps[i] <- fit_t$p.value   # save p values to the object ps
}
mean(ps< .05)
datadif <- mean(c(20, 40, 50)) - mean(c(10, 30, 35))
datadif
df2 <- data.frame(ID = 1:6, DV = c(20, 40, 50, 10, 30, 35))
# IDs 1 to 6 into groups of 3:
exp_pps <- combn(6, 3)
exp_pps
# To select the experimental participants in the first combination/permutation:
df2$ID %in% exp_pps[, 1]
Dif <- numeric(dim(exp_pps)[2])
for (i in 1:dim(exp_pps)[2]){
# create an index for the participants we are allocating to the "experimental" group
exp_index <- df2$ID %in% exp_pps[, i]
# create an index for the participants we are allocating to the "control" group
control_index = !exp_index
ExpM <- mean(df2$DV[exp_index])
ConM <- mean(df2$DV[control_index])
Dif[i] <- ExpM - ConM
}
Dif
c(1, 2, 3, 4, 5, 6) %in% c(1, 4, 5)
hist(Dif)
sort(Dif)
sample(df1$id, 10, replace = FALSE)
replication <- 10000
groupdif <- numeric(replication)
for (i in 1:replication){
sampledID <- sample(df1$id, 10)
ExpID <- df1$id %in% sampledID
ContID <- !(df1$id %in% sampledID)
groupdif[i] <- mean(df1[ExpID, "dif"]) - mean(df1[ContID, "dif"])
}
hist(groupdif, breaks = seq(-3, 3, length = 30))
observeddif <- mean(df1[df1$group == "exp", "dif"]) - mean(df1[df1$group == "con", "dif"])
observeddif
abline(v = observeddif, col = "red", lwd = 2)
observeddif <- mean(df1[df1$group == "exp", "dif"]) - mean(df1[df1$group == "con", "dif"])
observeddif
mean(groupdif >= observeddif)
mean(abs(groupdif) >= abs(observeddif))
set.seed(777)
df3 <- read.csv(file = "Week5_data2.csv", header = TRUE)
replication <- 10000
groupmeddif <- numeric(replication)
for (i in 1:replication){
sampledID <- sample(df3$id, 200)
ExpID <- df3$id %in% sampledID
ContID <- !(df3$id %in% sampledID)
groupmeddif[i] <- median(df3[ExpID, "X1"]) - median(df3[ContID, "X1"])
}
hist(groupmeddif, breaks = seq(-5, 5, length = 200))
observedmeddif <- median(df3[df3$group == 1, "X1"]) - median(df3[df3$group == 0, "X1"])
abline(v = observedmeddif, col = "red", lwd = 2)
mean(abs(groupmeddif) >= abs(observedmeddif))
ObsExpCor <- cor(df3[df3$group == 1, c("X1", "X2")])[1,2]
ObsContCor <- cor(df3[df3$group == 0, c("X1", "X2")])[1,2]
observedcordif <- ObsExpCor - ObsContCor
observedcordif
replication <- 10000
groupcordif <- numeric(replication)
for (i in 1:replication){
sampledID <- sample(df3$id, 200)
ExpID <- df3$id %in% sampledID
ContID <- !(df3$id %in% sampledID)
ExpCor <- cor(df3[ExpID, c("X1", "X2")])[1,2]
ContCor <- cor(df3[ContID, c("X1", "X2")])[1,2]
groupcordif[i] <- ExpCor - ContCor
}
hist(groupcordif, breaks = seq(-0.5, 0.5, length = 200))
abline(v = observedcordif, col = "red", lwd = 2)
mean(abs(groupcordif) >= abs(observedcordif))
df3$X1
quantile(df3$X1)
df3$group
quantile(df3$X1[df3$group == 0])
quantile(df3$X1[df3$group == 1])
yoga <- c(5.5,4.3, 3.9, 4.2, 5.1, 3.2,  5.6)
rest <- c(4.5, 3.6, 2.1, 5.6, 4.1, 1.2, 2.9)
dt <- cbind(as.data.frame(yoga),as.data.frame(rest))
colnames(dt) <- c("yoga","rest")
library(tidyr)
dt <- gather(dt, "group", "happiness")
tstat <- summary(lm(happiness~group,dt))$coefficients[2,3]
tstat
dt
tstat
eq <- read.csv("EQ_Data.csv")
cog_eq <- eq[,c("Q14.processed", "Q15.processed", "Q29.processed", "Q34.processed", "Q35.processed")]
# to improve readability, relabel the variables
colnames(cog_eq) <-c("cog_1","cog_2","cog_3","cog_4","cog_5")
knitr::kable(data.frame(cov(cog_eq)))
var(cog_eq$cog_1)
eq <- read.csv("EQ_Data.csv")
cog_eq <- eq[,c("Q14.processed", "Q15.processed", "Q29.processed", "Q34.processed", "Q35.processed")]
# to improve readability, relabel the variables
colnames(cog_eq) <-c("cog_1","cog_2","cog_3","cog_4","cog_5")
knitr::kable(data.frame(cov(cog_eq)))
var(cog_eq$cog_1)
knitr::kable(data.frame(cor(cog_eq)))
knitr::kable(data.frame(cov(cog_eq)))
# we know that a correlation matrix will have 1 where an item is correlating with itself, so we'll create an index to skip those items:
cov_itself = cor(cog_eq) == 1
# now let's calculate the mean of the valid parts of the covariance matrix
cov_df = data.frame(cov(cog_eq))
cov_df[cov_itself] = ""
knitr::kable(cov_df)
mean_cov_df = mean(cov(cog_eq)[!cov_itself])
mean_var_df <- data.frame(cov(cog_eq))
mean_var_df[!cov_itself] = ""
knitr::kable(mean_var_df)
sum_var_df = mean(cov(cog_eq)[cov_itself])
eq <- read.csv("EQ_Data.csv")
cog_eq <- eq[,c("Q14.processed", "Q15.processed", "Q29.processed", "Q34.processed", "Q35.processed")]
# to improve readability, relabel the variables
colnames(cog_eq) <-c("cog_1","cog_2","cog_3","cog_4","cog_5")
knitr::kable(data.frame(cov(cog_eq)))
reticulate::repl_python()
