), "normalDistribution.csv")
library(ggplot2)
# https://stackoverflow.com/a/12429538
norm_x<-seq(-4,4,0.01)
norm_y<-dnorm(-4,4,0.0)
norm_data_frame<-data.frame(x=norm_x,y=dnorm(norm_x,0,1))
shade_50 <- rbind(
c(0,0),
subset(norm_data_frame, x > 0),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_34.1 <- rbind(
c(1,0),
subset(norm_data_frame, x > 1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_13.6 <- rbind(
c(2,0),
subset(norm_data_frame, x > 2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
p<-qplot(
x=norm_data_frame$x,
y=norm_data_frame$y,
geom="line"
)
p +
geom_polygon(
data = shade_50,
aes(
x,
y,
fill="50"
)
) +
geom_polygon(
data = shade_34.1,
aes(
x,
y,
fill="34.1"
)
) +
geom_polygon(
data = shade_13.6,
aes(
x,
y,
fill="13.6"
)
) +
annotate(
"text",
x=0.5,
y=0.01,
label= "34.1%"
) +
annotate(
"text",
x=1.5,
y=0.01,
label= "13.6%"
) +
annotate(
"text",
x=2.3,
y=0.01,
label= "2.3%"
) +
xlab("Z-score") +
ylab("Frequency") +
theme(legend.position="none")
# https://stackoverflow.com/a/12429538
norm_x<-seq(-4,4,0.01)
norm_y<-dnorm(-4,4,0.0)
norm_data_frame<-data.frame(x=norm_x,y=dnorm(norm_x,0,1))
shade_2.3 <- rbind(
c(-8,0),
subset(norm_data_frame, x > -8),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_13.6 <- rbind(
c(-2,0),
subset(norm_data_frame, x > -2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_34.1 <- rbind(
c(-1,0),
subset(norm_data_frame, x > -1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_50 <- rbind(
c(0,0),
subset(norm_data_frame, x > 0),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_84.1 <- rbind(
c(1,0),
subset(norm_data_frame, x > 1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_97.7 <- rbind(
c(2,0),
subset(norm_data_frame, x > 2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
p<-qplot(
x=norm_data_frame$x,
y=norm_data_frame$y,
geom="line"
)
p +
geom_polygon(
data = shade_2.3,
aes(
x,
y,
fill="2.3"
)
) +
geom_polygon(
data = shade_13.6,
aes(
x,
y,
fill="13.6"
)
) +
geom_polygon(
data = shade_34.1,
aes(
x,
y,
fill="34.1"
)
) +
geom_polygon(
data = shade_50,
aes(
x,
y,
fill="50"
)
) +
geom_polygon(
data = shade_84.1,
aes(
x,
y,
fill="84.1"
)
) +
geom_polygon(
data = shade_97.7,
aes(
x,
y,
fill="97.7"
)
) +
xlim(c(-4,4)) +
annotate("text", x=-2.3, y=0.01, label= "13.6%") +
annotate("text", x=-1.4, y=0.01, label= "34.1%") +
annotate("text", x=-0.3, y=0.01, label= "50%") +
annotate("text", x=0.5, y=0.01, label= "84.1%") +
annotate("text", x=1.5, y=0.01, label= "97.7%") +
annotate("text", x=2.3, y=0.01, label= "100%") +
xlab("Z-score") +
ylab("Frequency") +
theme(legend.position="none")
# https://stackoverflow.com/a/12429538
norm_x<-seq(-4,4,0.01)
norm_y<-dnorm(-4,4,0.0)
norm_data_frame<-data.frame(x=norm_x,y=dnorm(norm_x,0,1))
shade_2.3 <- rbind(
c(-8,0),
subset(norm_data_frame, x > -8),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_13.6 <- rbind(
c(-2,0),
subset(norm_data_frame, x > -2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_34.1 <- rbind(
c(-1,0),
subset(norm_data_frame, x > -1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_50 <- rbind(
c(0,0),
subset(norm_data_frame, x > 0),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_84.1 <- rbind(
c(1,0),
subset(norm_data_frame, x > 1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_97.7 <- rbind(
c(2,0),
subset(norm_data_frame, x > 2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
p<-qplot(
x=norm_data_frame$x,
y=norm_data_frame$y,
geom="line"
)
p +
geom_polygon(
data = shade_2.3,
aes(
x,
y,
fill="2.3"
)
) +
geom_polygon(
data = shade_13.6,
aes(
x,
y,
fill="13.6"
)
) +
geom_polygon(
data = shade_34.1,
aes(
x,
y,
fill="34.1"
)
) +
geom_polygon(
data = shade_50,
aes(
x,
y,
fill="50"
)
) +
geom_polygon(
data = shade_84.1,
aes(
x,
y,
fill="84.1"
)
) +
geom_polygon(
data = shade_97.7,
aes(
x,
y,
fill="97.7"
)
) +
xlim(c(-4,4)) +
annotate("text", x=-2.3, y=0.01, label= "2.3%") +
annotate("text", x=-1.4, y=0.01, label= "15.9%") +
annotate("text", x=-0.3, y=0.01, label= "50%") +
annotate("text", x=0.5, y=0.01, label= "84.1%") +
annotate("text", x=1.5, y=0.01, label= "97.7%") +
annotate("text", x=2.3, y=0.01, label= "100%") +
# annotate("text", x=-2.3, y=0.01, label= "13.6%") +
# annotate("text", x=-1.4, y=0.01, label= "34.1%") +
# annotate("text", x=-0.3, y=0.01, label= "50%") +
# annotate("text", x=0.5, y=0.01, label= "84.1%") +
# annotate("text", x=1.5, y=0.01, label= "97.7%") +
# annotate("text", x=2.3, y=0.01, label= "100%") +
xlab("Z-score") +
ylab("Frequency") +
theme(legend.position="none")
# https://stackoverflow.com/a/12429538
norm_x<-seq(-4,4,0.01)
norm_y<-dnorm(-4,4,0.0)
norm_data_frame<-data.frame(x=norm_x,y=dnorm(norm_x,0,1))
shade_2.3 <- rbind(
c(-8,0),
subset(norm_data_frame, x > -8),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_13.6 <- rbind(
c(-2,0),
subset(norm_data_frame, x > -2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_34.1 <- rbind(
c(-1,0),
subset(norm_data_frame, x > -1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_50 <- rbind(
c(0,0),
subset(norm_data_frame, x > 0),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_84.1 <- rbind(
c(1,0),
subset(norm_data_frame, x > 1),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
shade_97.7 <- rbind(
c(2,0),
subset(norm_data_frame, x > 2),
c(norm_data_frame[nrow(norm_data_frame), "X"], 0))
p<-qplot(
x=norm_data_frame$x,
y=norm_data_frame$y,
geom="line"
)
p +
geom_polygon(
data = shade_2.3,
aes(
x,
y,
fill="2.3"
)
) +
geom_polygon(
data = shade_13.6,
aes(
x,
y,
fill="13.6"
)
) +
geom_polygon(
data = shade_34.1,
aes(
x,
y,
fill="34.1"
)
) +
geom_polygon(
data = shade_50,
aes(
x,
y,
fill="50"
)
) +
geom_polygon(
data = shade_84.1,
aes(
x,
y,
fill="84.1"
)
) +
geom_polygon(
data = shade_97.7,
aes(
x,
y,
fill="97.7"
)
) +
xlim(c(-4,4)) +
annotate("text", x=-2.3, y=0.01, label= "2.3%") +
annotate("text", x=-1.4, y=0.01, label= "15.9%") +
annotate("text", x=-0.4, y=0.01, label= "50%") +
annotate("text", x=0.5, y=0.01, label= "84.1%") +
annotate("text", x=1.5, y=0.01, label= "97.7%") +
annotate("text", x=2.3, y=0.01, label= "100%") +
# annotate("text", x=-2.3, y=0.01, label= "13.6%") +
# annotate("text", x=-1.4, y=0.01, label= "34.1%") +
# annotate("text", x=-0.3, y=0.01, label= "50%") +
# annotate("text", x=0.5, y=0.01, label= "84.1%") +
# annotate("text", x=1.5, y=0.01, label= "97.7%") +
# annotate("text", x=2.3, y=0.01, label= "100%") +
xlab("Z-score") +
ylab("Frequency") +
theme(legend.position="none")
reticulate::repl_python()
gdp_resid <- ggplot(
data = gapminder_2007,
aes(
x=gdpPercap,
y=lifeExp
)
) +
geom_point() +
geom_vline(
xintercept = mean(gapminder_2007$gdpPercap),
linetype   = "dashed",
color      = "#006599",
size       = 1
) +
coord_cartesian(ylim = c(30, 85)) +
xlab("GDP per capita") +
ylab("Life Expectancy") +
geom_segment(
aes(
xend = mean(gdpPercap),
yend = lifeExp,
color = "resid"
)
) +
theme(
legend.position = "none"
)
ggsave("gdp_resid.png", gdp_resid)
gdp_resid
shared_resid <- ggplot(
data = gapminder_2007,
aes(
x=gdpPercap,
y=lifeExp
)
) +
geom_point() +
geom_vline(
xintercept = mean(gapminder_2007$gdpPercap),
linetype   = "dashed",
color      = "#006599",
size       = 1
) +
coord_cartesian(ylim = c(30, 85)) +
xlab("GDP per capita") +
ylab("Life Expectancy") +
geom_segment(
aes(
xend = mean(gdpPercap),
yend = lifeExp,
color = "GDP residuals"
)
) +
geom_segment(
aes(
xend = gdpPercap,
yend = mean(lifeExp),
color = "Life Expectancy Residuals"
)
) +
geom_hline(
yintercept = mean(gapminder_2007$lifeExp),
linetype   = "dashed",
color      = "#006599",
size       = 1
)
ggsave("shared_resid.png", shared_resid)
shared_resid
cor.test(gapminder_2007$gdpPercap, gapminder_2007$lifeExp)
shared_resid
---
title: "Correlations (R,Python)"
---
title: "Correlations (R,Python)"
a
title: "Corr
shared_resid
inverted_resid <- ggplot(
data = gapminder_2007,
aes(
x=gdpPercap,
y=125-lifeExp
)
) +
geom_point() +
geom_vline(
xintercept = mean(gapminder_2007$gdpPercap),
linetype   = "dashed",
color      = "#006599",
size       = 1
) +
coord_cartesian(ylim = c(30, 85)) +
xlab("GDP per capita") +
ylab("Life Expectancy") +
geom_segment(
aes(
xend = mean(gdpPercap),
yend = 125-lifeExp,
color = "GDP residuals"
)
) +
geom_segment(
aes(
xend = gdpPercap,
yend = mean(125-lifeExp),
color = "Life Expectancy Residuals"
)
) +
geom_hline(
yintercept = mean(125-gapminder_2007$lifeExp),
linetype   = "dashed",
color      = "#006599",
size       = 1
)
inverted_resid
inverted_resid
# Skewness and kurtosis and their standard errors as implement by SPSS
#
# Reference: pp 451-452 of
# http://support.spss.com/ProductsExt/SPSS/Documentation/Manuals/16.0/SPSS 16.0 Algorithms.pdf
#
# See also: Suggestion for Using Powerful and Informative Tests of Normality,
# Ralph B. D'Agostino, Albert Belanger, Ralph B. D'Agostino, Jr.,
# The American Statistician, Vol. 44, No. 4 (Nov., 1990), pp. 316-321
spssSkewKurtosis=function(x) {
w=length(x)
m1=mean(x)
m2=sum((x-m1)^2)
m3=sum((x-m1)^3)
m4=sum((x-m1)^4)
s1=sd(x)
skew=w*m3/(w-1)/(w-2)/s1^3
sdskew=sqrt( 6*w*(w-1) / ((w-2)*(w+1)*(w+3)) )
kurtosis=(w*(w+1)*m4 - 3*m2^2*(w-1)) / ((w-1)*(w-2)*(w-3)*s1^4)
sdkurtosis=sqrt( 4*(w^2-1) * sdskew^2 / ((w-3)*(w+5)) )
## z-scores added by reading-psych
zskew = skew/sdskew
zkurtosis = kurtosis/sdkurtosis
mat=matrix(c(skew,kurtosis, sdskew,sdkurtosis, zskew, zkurtosis), 2,
dimnames=list(c("skew","kurtosis"), c("estimate","se","zScore")))
return(mat)
}
spssSkewKurtosis(gapminder_2007$gdpPercap)
spssSkewKurtosis(gapminder_2007$lifeExp)
gapminder_2007$gdpPercap_rank <- rank(gapminder_2007$gdpPercap)
gapminder_2007$lifeExp_rank <- rank(gapminder_2007$lifeExp)
reticulate::repl_python()
spssSkewKurtosis(gapminder_2007$gdpPercap_rank)
spssSkewKurtosis(gapminder_2007$lifeExp_rank)
# Pearson correlation on **ranked** data:
cor.test(gapminder_2007$gdpPercap_rank, gapminder_2007$lifeExp_rank, method = "pearson")
# Spearman correlation applied to original data (letting R do the ranking)
cor.test(gapminder_2007$gdpPercap, gapminder_2007$lifeExp, method = "spearman")
reticulate::repl_python()
