rm(list = ls())
# turn off scientific notation
options(scipen = 999)
# load the ggplot2 package
library(ggplot2)
# load the tidyverse package
library(tidyverse)
# load car library
library(car)
# load new dataset
data_simple_reg <- read.csv("Davis.csv")
# scatterplot between weight and height
ggplot(data_simple_reg, aes(y=weight, x=height))+
geom_point()+
theme_bw()
# boxplot to check for ouliers for weight
ggplot(data_simple_reg) +
aes(x = "", y = weight) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
# boxplot to check for ouliers for height
ggplot(data_simple_reg) +
aes(x = "", y = height) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
# let's say we want to predict weight given someone's height
fit <- lm(weight ~height, data=data_simple_reg)
summary(fit)
# let's say we want to predict height given someone's weight
fit_rev <- lm(height ~ weight, data=data_simple_reg)
summary(fit_rev)
# scatterplot between weight and height with best fitted line
ggplot(data_simple_reg, aes(y=weight, x=height))+
geom_point()+
theme_bw()+
geom_smooth(method = "lm")
Salaries
data_simple_reg2 <- read.csv("Salary.csv")
View(data_simple_reg2)
data_mlt_reg <- read.csv("Salary.csv")
# let's say we want to predict salary given someone's years of services and rank
fit4 <- lm(salary ~ rank + yrs.service, data=data_mlt_reg)
# load the dataset
data_log_reg <- read.csv("Salary.csv")
View(data_log_reg)
# load the dataset
data_log_reg <- read.csv("Salary.csv")
# recode discipline A to 0
data_log_reg$discipline[data_log_reg$discipline=="A"] <- 0
data_log_reg
# recode discipline A to 0
data_log_reg$discipline[data_log_reg$discipline=="A"] <- 0
# recode discipline B to 1
data_log_reg$discipline[data_log_reg$discipline=="B"] <- 1
# make sure that discipline (i.e., our DV) is a factor
data_log_reg$discipline <- as.factor(data_log_reg$discipline)
# create a logistic regression (predicting probability of a person belonging to discipline B)
fit_log_reg <- glm(formula = discipline ~., family = binomial(logit), data = data_log_reg)
summary(fit_log_reg)
# create a logistic regression (predicting probability of a person belonging to discipline B)
fit_log_reg <- glm(formula = discipline ~., family = binomial(logit), data = data_log_reg)
summary(fit_log_reg)
# stepwise logistic regression
#Reduce parameters using stepwise regression
fit_log_reg_stepwise <- step(fit_log_reg, k = log(nrow(data_log_reg)))
summary(fit_log_reg_stepwise)
this_mu = 50.5
#this_value = 10
this_sd = 29 # based on the SD of all values from 1 to 100
y_vector = rep(1,100)
for(i in 1:100){
this_value = i
y_vector[i] = 1/(1 + exp(1)^(-(this_value-this_mu)/this_sd))
}
plot(y_vector, xlab = "score in test 1",ylab = "p of getting above mean score in test 2")
abline(h = .5, v = 50.5, col=4)
this_mu = 50.5
#this_value = 10
this_sd = 29
x_vector = rep(1,100)
y_vector = rep(1,100)
for(i in 1:100){
this_value = i
x_vector[i] = (this_value - this_mu)/this_sd
y_vector[i] = 1/(1 + exp(1)^(-(this_value-this_mu)/this_sd))
}
plot(x_vector, y_vector, xlab = "score in test 1 in SDs from the mean",ylab = "p of getting above mean score in test 2")
abline(h = .5, v = 0, col=4)
this_mu = 50.5
#this_value = 10
this_sd = 10
y_vector = rep(1,100)
for(i in 1:100){
this_value = i
y_vector[i] = 1/(1 + exp(1)^(-(this_value-this_mu)/this_sd))
}
plot(y_vector, xlab = "score in test 1",ylab = "p of getting above mean score in test 2",type = "l")
abline(h = .5, v = 50.5, col=4)
abline(h = .73, v = 60.5, col=3) #.73 was selected through trial and error
this_mu = 50.5
#this_value = 10
this_sd = 10
x_vector = rep(1,100)
y_vector = rep(1,100)
for(i in 1:100){
this_value = i
x_vector[i] = (this_value - this_mu)/this_sd
y_vector[i] = 1/(1 + exp(1)^(-(this_value-this_mu)/this_sd))
}
plot(x_vector,y_vector, xlab = "score in test 1 in SDs from the mean",ylab = "p of getting above mean score in test 2",type = "l")
abline(h = .5, v = 0, col=4)
abline(h = .73, v = 1, col=3) #.72 was selected through trial and error
### wiki example
wiki_df <- data.frame(
hours = c(0.50,0.75,1.00,1.25,1.50,1.75,1.75,2.00,2.25,2.50,2.75,3.00,3.25,3.50,4.00,4.25,4.50,4.75,5.00,5.50),
pass = c(0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1)
)
mean(wiki_df$hours * wiki_df$pass)
summary(glm(pass ~ hours, data = wiki_df))
gapminder
library(gapminder)
gapminder
write.csv(gapminder,"gapminder.csv")
# install (if required) and load the gapminder data
if(!require(gapminder)){install.packages("gapminder")}
library(gapminder)
# create a new data frame that only focuses on data from 2007
gapminder_2007 <- subset(
gapminder,   # the data set
year == 2007
)
# a reminder of the data frame
rmarkdown::paged_table(head(gapminder_2007))
# total of all years
sum_life_expectancy  = sum(gapminder_2007$lifeExp)
# count the people
n_life_expectancy    = length(gapminder_2007$lifeExp)
mean_life_expectancy = sum_life_expectancy/n_life_expectancy
mean_life_expectancy
# Solution for calculating mode found at https://stackoverflow.com/a/2547918 as there doesn't seem to be a native function:
library(modeest)
mlv(gapminder_2007$lifeExp, method = "mfv")
101344.445/1704
9515.054/142
life_expectancy_variance_table <- data.frame(
life_expectancy = gapminder_2007$lifeExp,
diff_from_mean  = gapminder_2007$lifeExp - mean(gapminder_2007$lifeExp)
)
rmarkdown::paged_table(life_expectancy_variance_table)
reticulate::repl_python()
mean(life_expectancy_variance_table$diff_from_mean)
life_expectancy_variance_table$diff_squared = life_expectancy_variance_table$diff_from_mean^2
rmarkdown::paged_table(life_expectancy_variance_table)
mean(gapminder_2007$lifeExp[gapminder_2007$year==2007])
43.828 - mean(gapminder_2007$lifeExp[gapminder_2007$year==2007])
-23.179^2
(-23.179)^2
sum(life_expectancy_variance_table$diff_squared)
20551.853/142
pet_data <- data.frame(
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
rmarkdown::paged_table(pet_data)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height)) +geom_point()
ggplot(pet_data, aes(x = group, y = height)) + geom_point() + geom_boxplot()
ggplot(pet_data, aes(x = group, y = height)) + geom_point() + geom_bar()
ggplot(pet_data, aes(x = group, y = height)) + geom_point() + geom_col()
ggplot(pet_data, aes(x = group, y = height))  + geom_col() + geom_point()
ggplot(pet_data, aes(x = group, y = height))  + geom_point()
ggplot(pet_data, aes(x = group, y = height))  + geom_point() + geom_boxplot()
ggplot(pet_data, aes(x = group, y = height))   + geom_boxplot() + geom_point()
ggplot(pet_data, aes(x = group, y = height))   + geom_boxplot() #+ geom_point()
ggplot(pet_data, aes(x = group, y = height))   + geom_boxplot() + geom_point()
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point()
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() + geom_jitter(position = position_jitter(width = 0.4)) +
geom_errorbar(stat = "hline", yintercept = "mean",
width=0.8,aes(ymax=..y..,ymin=..y..))
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() + geom_jitter(position = position_jitter(width = 0.4)) + geom_errorbar(stat = "hline", yintercept = "mean",
width=0.8,aes(ymax=..y..,ymin=..y..))
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() + geom_jitter(position = position_jitter(width = 0.4)) + geom_errorbar(stat = "hline", yintercept = "mean",
width=0.8,aes(ymax=..height..,ymin=..height..))
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() + geom_jitter(position = position_jitter(width = 0.4)) + geom_errorbar(stat = "hline", yintercept = "mean", width=0.8,aes(ymax=..height..,ymin=..height..))
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() + geom_jitter(position = position_jitter(width = 0.4)) + geom_errorbar(stat = "hline", yintercept = "mean", width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() + geom_errorbar(stat = "hline", yintercept = "mean", width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point() # + geom_errorbar(stat = "hline", yintercept = "mean", width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter() # + geom_errorbar(stat = "hline", yintercept = "mean", width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat = "hline", yintercept = "mean", width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_hline(stat = "hline", yintercept = "mean", width=0.8)
?geom_hline
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_hline(yintercept = "mean", width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_hline(yintercept = mean(height), width=0.8)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun.y="mean", width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(dose)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun.y="mean", width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary",  width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(summary = "mean_se", stat="summary", fun.y="mean", width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
?geom_errorbar
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(summary = mean_se(), stat="summary", fun.y="mean", width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(summary = "mean_se", stat="summary", fun.y="mean", width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(summary = "mean_se", stat="summary", fun.y=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(summary = "mean_se", stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
stat="summary",
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
(pet_data$height-mean(pet_data$height))^2
sum((pet_data$height-mean(pet_data$height))^2)
sum((pet_data$height-mean(pet_data$height))^2)/10
sqrt(sum((pet_data$height-mean(pet_data$height))^2)/10)
mean(abs(pet_data$height - mean(pet_data$height)))
1:10
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = id, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
library(ggplot2)
ggplot(pet_data, aes(x = id, y = height, color=group))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=id))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=id))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(id)), size=1)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(id)), size=1)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor()), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_point()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
knitr::kable(pet_data)
pet_data$group_mean[pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data$group_mean[pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
knitr::kable(pet_data)
pet_data$group_mean[pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data$group_mean[pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data$
knitr::kable(pet_data)
pet_data$group_mean[pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data$group_mean[pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data$group_diff = pet_data$height - pet_data$group_mean
knitr::kable(pet_data)
pet_data$group_mean[pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data$group_mean[pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["group difference"]]= pet_data$height - pet_data$group_mean
knitr::kable(pet_data)
this_page = "dispersion"
# load the gapminder data
library(gapminder)
# create a new data frame that only focuses on data from 2007
gapminder_2007 <- subset(
gapminder,   # the data set
year == 2007
)
min(gapminder_2007$lifeExp)
max(gapminder_2007$lifeExp)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
pet_data$group_mean[pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data$group_mean[pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["group difference"]]= pet_data$height - pet_data$group_mean
knitr::kable(pet_data)
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["group difference"]]= pet_data$height - pet_data$group_mean
knitr::kable(pet_data)
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["group difference"]]= pet_data$height - pet_data$group_mean
knitr::kable(pet_data)
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["group difference"]]= pet_data$height - pet_data$group_mean
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["group difference"]]= pet_data$height - pet_data[["group mean"]]
knitr::kable(pet_data)
this_page = "dispersion"
# load the gapminder data
library(gapminder)
# create a new data frame that only focuses on data from 2007
gapminder_2007 <- subset(
gapminder,   # the data set
year == 2007
)
min(gapminder_2007$lifeExp)
max(gapminder_2007$lifeExp)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), size=1)
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["difference"]]= pet_data$height - pet_data[["group mean"]]
pet_data[["difference^2"]]= pet_data[["difference"]]^2
knitr::kable(pet_data)
58/5
var(pet_data$height[pet_data$group=="dog"])
58/4
reticulate::repl_python()
var(c(100,105,95,102,98))
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=..y.., ymin=..y.., color=factor(group)), linewidth=1)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=after_stat(y), ymin=after_stat(y), color=factor(group)), linewidth=1)
three_heights = c(150,160,170)
population_height_mean = mean(three_heights)
population_height_variance = sum((three_heights - population_height_mean)^2)/3
#sample participants in pairs
sample_heights = data.frame(
pp1 = c(150,150,NA),
pp2 = c(160,NA,160),
pp3 = c(NA,170,170),
pair = c(
"1 and 2",
"1 and 3",
"2 and 3"
)
)
sample_heights$mean = c(
mean(c(three_heights[1], three_heights[2])),
mean(c(three_heights[1], three_heights[3])),
mean(c(three_heights[2], three_heights[3]))
)
sample_heights$pop_var = c(
sum((c(three_heights[1], three_heights[2]) - mean(c(three_heights[1], three_heights[2])))^2)/3,
sum((c(three_heights[1], three_heights[3]) - mean(c(three_heights[1], three_heights[3])))^2)/3,
sum((c(three_heights[2], three_heights[3]) - mean(c(three_heights[2], three_heights[3])))^2)/3
)
sample_heights$sample_var = c(
sum((c(three_heights[1], three_heights[2]) - mean(c(three_heights[1], three_heights[2])))^2)/(3-1),
sum((c(three_heights[1], three_heights[3]) - mean(c(three_heights[1], three_heights[3])))^2)/(3-1),
sum((c(three_heights[2], three_heights[3]) - mean(c(three_heights[2], three_heights[3])))^2)/(3-1)
)
rmarkdown::paged_table(sample_heights)
mean_sample_mean <- mean(sample_heights$mean)
mean_sample_variance <- mean(sample_heights$sample_var)
mean_population_variance <- mean(sample_heights$pop_var)
(150 + 160 + 170)/3
200/3
population_height_mean
mean_sample_mean
three_heights = c(150,160,170)
population_height_mean = mean(three_heights)
population_height_variance = sum((three_heights - population_height_mean)^2)/3
#sample participants in pairs
sample_heights = data.frame(
pp1 = c(150,150,NA),
pp2 = c(160,NA,160),
pp3 = c(NA,170,170),
pair = c(
"1 and 2",
"1 and 3",
"2 and 3"
)
)
sample_heights$mean = c(
mean(c(three_heights[1], three_heights[2])),
mean(c(three_heights[1], three_heights[3])),
mean(c(three_heights[2], three_heights[3]))
)
sample_heights$pop_var = c(
sum((c(three_heights[1], three_heights[2]) - mean(c(three_heights[1], three_heights[2])))^2)/3,
sum((c(three_heights[1], three_heights[3]) - mean(c(three_heights[1], three_heights[3])))^2)/3,
sum((c(three_heights[2], three_heights[3]) - mean(c(three_heights[2], three_heights[3])))^2)/3
)
sample_heights$sample_var = c(
sum((c(three_heights[1], three_heights[2]) - mean(c(three_heights[1], three_heights[2])))^2)/(3-1),
sum((c(three_heights[1], three_heights[3]) - mean(c(three_heights[1], three_heights[3])))^2)/(3-1),
sum((c(three_heights[2], three_heights[3]) - mean(c(three_heights[2], three_heights[3])))^2)/(3-1)
)
rmarkdown::paged_table(sample_heights)
mean_sample_mean <- mean(sample_heights$mean)
mean_sample_variance <- mean(sample_heights$sample_var)
mean_population_variance <- mean(sample_heights$pop_var)
population_height_variance
mean_population_variance
population_height_variance
mean_sample_variance
sd(c(10,20,30))
sd(c(150,160,170))
reticulate::repl_python()
quit
population_height_variance
mean_population_variance
this_page = "dispersion"
# load the gapminder data
library(gapminder)
# create a new data frame that only focuses on data from 2007
gapminder_2007 <- subset(
gapminder,   # the data set
year == 2007
)
min(gapminder_2007$lifeExp)
max(gapminder_2007$lifeExp)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=after_stat(y), ymin=after_stat(y), color=factor(group)), linewidth=1)
# currently commenting this out, but the table below is what the above figures are based on
# #| label: tbl-cat-dog-sum-of-squares
# #| tbl-cap: "A table including the steps needed to calculate the variance of height for cats and dogs"
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["difference"]]= pet_data$height - pet_data[["group mean"]]
pet_data[["difference^2"]]= pet_data[["difference"]]^2
# knitr::kable(pet_data)
life_expectancy_variance_table <- data.frame(
life_expectancy = gapminder_2007$lifeExp,
diff_from_mean  = gapminder_2007$lifeExp - mean(gapminder_2007$lifeExp)
)
rmarkdown::paged_table(life_expectancy_variance_table)
mean(life_expectancy_variance_table$diff_from_mean)
life_expectancy_variance_table$diff_squared = life_expectancy_variance_table$diff_from_mean^2
rmarkdown::paged_table(life_expectancy_variance_table)
mean(life_expectancy_variance_table$diff_squared)
sum_of_squares = sum(life_expectancy_variance_table$diff_squared)
this_variance  = sum_of_squares/length(life_expectancy_variance_table$diff_squared)
this_variance
var(c(100,105,95,102,98))
reticulate::repl_python()
this_page = "dispersion"
# load the gapminder data
library(gapminder)
# create a new data frame that only focuses on data from 2007
gapminder_2007 <- subset(
gapminder,   # the data set
year == 2007
)
min(gapminder_2007$lifeExp)
max(gapminder_2007$lifeExp)
# description of plot here
pet_data <- data.frame(
id = 1:10,
group  = c(rep("dog",5), rep("cat",5)),
height = c(100,105,95,102,98, 55,70,30,80,100)
)
library(ggplot2)
ggplot(pet_data, aes(x = group, y = height, color=group))   + geom_jitter()  + geom_errorbar(stat="summary", fun=mean, width=0.8, aes(ymax=after_stat(y), ymin=after_stat(y), color=factor(group)), linewidth=1)
# currently commenting this out, but the table below is what the above figures are based on
# #| label: tbl-cat-dog-sum-of-squares
# #| tbl-cap: "A table including the steps needed to calculate the variance of height for cats and dogs"
pet_data[["group mean"]][pet_data$group == "cat"] = mean(pet_data$height[pet_data$group == "cat"])
pet_data[["group mean"]][pet_data$group == "dog"] = mean(pet_data$height[pet_data$group == "dog"])
pet_data[["difference"]]= pet_data$height - pet_data[["group mean"]]
pet_data[["difference^2"]]= pet_data[["difference"]]^2
# knitr::kable(pet_data)
life_expectancy_variance_table <- data.frame(
life_expectancy = gapminder_2007$lifeExp,
diff_from_mean  = gapminder_2007$lifeExp - mean(gapminder_2007$lifeExp)
)
rmarkdown::paged_table(life_expectancy_variance_table)
mean(life_expectancy_variance_table$diff_from_mean)
life_expectancy_variance_table$diff_squared = life_expectancy_variance_table$diff_from_mean^2
rmarkdown::paged_table(life_expectancy_variance_table)
mean(life_expectancy_variance_table$diff_squared)
sum_of_squares = sum(life_expectancy_variance_table$diff_squared)
this_variance  = sum_of_squares/length(life_expectancy_variance_table$diff_squared)
this_variance
var(c(100,105,95,102,98))
reticulate::repl_python()
