contingency_data <- matrix(
data = c(45,55,120,80),
nrow = 2,
ncol = 2
)
contingency_data
manual_phi = (
contingency_data[1,1] * contingency_data[2,2] -
contingency_data[1,2] * contingency_data[2,1]
)/sqrt(
sum(contingency_data[1,]) *
sum(contingency_data[2,]) *
sum(contingency_data[,1]) *
sum(contingency_data[,2])
)
phi(contingency_data, digits = 7)
library(psych)
phi(contingency_data, digits = 7)
sse  = sum((gapminder_2007$lifeExp - gapminder_2007$fitted)^2)
library(gapminder)
library(ggplot2)
# create a new data frame that only focuses on data from 2007
gapminder_2007 <- subset(
gapminder,   # the data set
year == 2007
)
ggplot(
data = gapminder_2007,
aes(
x = gdpPercap,
y = lifeExp,
)
) +
# add data points as dots
geom_point() +
# add a line of best fit:
geom_smooth(
method='lm',  # linear model
formula=y~x   # predict y from x
) +
# clearer x-axis label
xlab("GDP per capita") +
# clearer y-axis label
ylab("Life expectancy")
# turn off scientific notation so that the numbers are not e-numbers (and thus easier to read)
options(scipen = 999)
# Make a model of a regression
life_expectancy_model <- lm(
data = gapminder_2007,
formula = lifeExp ~ gdpPercap # predict life expectancy from GDP
)
# report the intercept and the gradient (AKA slope) of each predictor (which will only be GDP)
life_expectancy_model$coefficients
gapminder_2007$fitted = life_expectancy_model$coefficients[1] + # intercept
life_expectancy_model$coefficients[2]                       * # gradient
gapminder_2007$gdpPercap
ggplot(
data = gapminder_2007,
aes(
x = gdpPercap,
y = lifeExp,
)
) +
# add data points as dots
geom_point() +
# add a line of best fit:
geom_smooth(
method='lm',  # linear model
formula=y~x   # predict y from x
) +
# clearer x-axis label
xlab("GDP per capita") +
# clearer y-axis label
ylab("Life expectancy") +
# add lines to show the residuals
geom_segment(
aes(
xend = gdpPercap,
yend = fitted,
color = "resid"
)
)
sse  = sum((gapminder_2007$lifeExp - gapminder_2007$fitted)^2)
ssto = sum((gapminder_2007$lifeExp - mean(gapminder_2007$lifeExp))^2)
rsqr = 1-(sse/ssto)
res_gdp = gapminder_2007$lifeExp - gapminder_2007$fitted
cor.test(gapminder_2007$pop, res_gdp)
sum(
(gapminder_2007$lifeExp-mean(gapminder_2007$lifeExp)) *
(gapminder_2007$gdpPercap-mean(gapminder_2007$gdpPercap))
)/
sqrt(
sum((gapminder_2007$lifeExp - mean(gapminder_2007$lifeExp))^2) *
sum((gapminder_2007$gdpPercap - mean(gapminder_2007$gdpPercap))^2)
)
cor(gapminder_2007$lifeExp, gapminder_2007$gdpPercap)
# r^2
cor(gapminder_2007$lifeExp, gapminder_2007$gdpPercap)^2
summary(life_expectancy_model)
sum(
(gapminder_2007$lifeExp-mean(gapminder_2007$lifeExp)) *
(gapminder_2007$gdpPercap-mean(gapminder_2007$gdpPercap)) *
(gapminder_2007$pop-mean(gapminder_2007$pop))
)/
sqrt(
sum((gapminder_2007$lifeExp - mean(gapminder_2007$lifeExp))^2) *
sum((gapminder_2007$gdpPercap - mean(gapminder_2007$gdpPercap))^2) *
sum((gapminder_2007$pop - mean(gapminder_2007$pop))^2)
)
reticulate::repl_python()
reticulate::py_install("markdownTable", pip = T)
reticulate::use_virtualenv("new-env")
reticulate::use_virtualenv("new-env")
# Get the location of the python executable (does this work on unix based OSes?)
py_loc <- reticulate::py_exe()
# Tell renv to use the executable located in the environment
renv::use_python(py_loc)
# Install packages in this environment
reticulate::py_install("gapminder", pip = T)
reticulate::py_install("markdownTable", pip = T)
reticulate::py_install("jupyter", pip = T)
# Record changes to the R and Python enviroments
renv::snapshot()
reticulate::repl_python()
